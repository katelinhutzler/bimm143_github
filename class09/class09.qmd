---
title: "class09"
author: Katie
format: pdf
---


```{r}
pdbstats <- read.csv("PDB.csv", row.names = 1)
head(pdbstats)
```

>Q1: What percentage of structures in the PDB are solved by X-Ray and Electron Microscopy.

```{r}
# Deal with the comma making these nonnumeric...
n.xray <- sum(as.numeric(gsub(",","",pdbstats$X.ray)))
n.em <- sum(as.numeric(gsub(",","",pdbstats$EM)))
n.total <- sum(as.numeric(gsub(",","",pdbstats$Total)))

p.xray <- (n.xray/n.total)*100
p.em <- (n.em/n.total)*100

#and 2 s.f
round(p.xray, 2)
round(p.em, 2)
```




>Q2: What proportion of structures in the PDB are protein?

```{r}
as.numeric(gsub(",","", pdbstats$Total))/n.total*100
```


There are r n.xray protein structures (`r round(p.xray,2)` %) and `r n.em` EM (`r round(p.em,2)` %) EM structures in the current PDB database


>Q3: Type HIV in the PDB website search box on the home page and determine how many HIV-1 protease structures are in the current PDB?

It is not straightforward to find all HIV-1 protease structures using pain text searching on the data base. 
>Q4: Water molecules normally have 3 atoms. Why do we see just one atom per water molecule in this structure?

>Q5: There is a critical “conserved” water molecule in the binding site. Can you identify this water molecule? What residue number does this water molecule have

>Q6: Generate and save a figure clearly showing the two distinct chains of HIV-protease along with the ligand. You might also consider showing the catalytic residues ASP 25 in each chain and the critical water (we recommend “Ball & Stick” for these side-chains). Add this figure to your Quarto document.

![An image I like whilst learning how to break Molstar](1HSG-2.png)


## Working with structure data in R

We will use the `bio3d` package for this: 
```{r}
library(bio3d)
```
```{r}
pdb <- read.pdb("1hsg")
pdb
```


```{r}
head(pdb$atom)
```


What is the first residue 3 letter code?

```{r}
pdb$atom$resid[1]
aa321(pdb$atom$resid[1])
```



>Q7: How many amino acid residues are there in this pdb object? 

198

>Q8: Name one of the two non-protein residues? 

HOH

>Q9: How many protein chains are in this structure?

2


## Predicting functional motions of a single structure 

Let's read a new PDB structure of Adenylate Kinase and perform Normal mode analysis.


```{r}
adk <- read.pdb("6s36")
adk
```

Normal mode analysis (NMA) is a structural bioinformatics method to predict protein flexibility and potential functional motions (a.k.a. conformational changes)

```{r}
m <- nma(adk)
```
```{r}
plot(m)

```
```{r}
mktrj(m, file="adl_m7.pdb")
```

# Section 4. Comparative Structure Analysis

Today we are continuing where we left off last day building towards completing the loop from biomolecular structural data to our new analysis methids like PCA and clustering. 

We begin with getting a single protein sequence for a protein family of interest. 



>Q10. Which of the packages above is found only on BioConductor and not CRAN? 

msa

>Q11. Which of the above packages is not found on BioConductor or CRAN?: 

bio3d view

>Q12. True or False? Functions from the devtools package can be used to install packages from GitHub and BitBucket? 

TRUE


```{r}
library(bio3d)

aa <- get.seq("1ake_A")
aa
```

Now we can use this sequence as a query to BLAST search the PDB to find similar sequences and structures. 

```{r}
# Blast or hmmer search 
#b <- blast.pdb(aa)
```

I could save and load my blast results next time so I don't need to run the search every time. 

>Q13. How many amino acids are in this sequence, i.e. how long is this sequence?

214




```{r}
#saveRDS(b, file="blast_results.RDS")
```

```{r}
b <- readRDS("blast_results.RDS")
```




Summary of the blast results 


```{r}
hits <- plot(b)
```

```{r}
plot(b)
```


```{r}
hits
```

```{r}
hits$pdb.id
```

```{r}
#Download related PDB files
files <- get.pdb(hits$pdb.id, path="pdbs", split=TRUE, gzip=TRUE)

```
Next we are going to align and superimpose all these structures

```{r}
# Align releated PDBs
pdbs <- pdbaln(files, fit = TRUE, exefile="msa")
pdbs
```

## Some annotation of the PDBs 

```{r}
# Vector containing PDB codes for figure axis
ids <- basename.pdb(pdbs$id)
# Draw schematic alignment
#plot(pdbs, labels=ids)
```

And collect annotation for each entry
```{r}
anno <- pdb.annotate(ids)
```


```{r}
head(anno)
```



##Principal Component Analysis

Time for PCA. We will use not the `prcomp()` function from base R but the `pca()` function from the `bio3d` package as this one is designed to work nicely with biomolecular data. 

```{r}
pc.xray <- pca(pdbs)
plot(pc.xray)
```

We can now focus in on PC1 vs PC2
```{r}
plot(pc.xray, 1:2)
```

Let's cluster our structures
```{r}
# Calculate RMSD
rd <- rmsd(pdbs)

# Structure-based clustering
hc.rd <- hclust(dist(rd))
plot(hc.rd)
```

And now my PC plot colored by clustering group 
```{r}
grps.rd <- cutree(hc.rd, k=3)

plot(pc.xray, 1:2, col="grey50", bg=grps.rd, pch=21, cex=1)
```


To visualize the major structural variations in the ensemble the function `mktrj()` can be used to generate a trajectory PDB file by interpolating along a give PC (eigenvector):


```{r}
mktrj(pc.xray, pc=1, file="pc_1.pdb")
```

We can now open this trajectory file in Molestar to view a wee movie of the major differences (i.e. displacements of atoms) in structures set as we move along PC1. 










