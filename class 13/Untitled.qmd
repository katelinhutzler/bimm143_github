---
title: "class 13"
format: pdf
---

```{r}
library(DESeq2)
```

```{r}
# Import metadata and take a peak
colData = read.csv("GSE37704_metadata.csv",row.names=1)
head(colData)
```
```{r}
# Import countdata
countDataTmp = read.csv("GSE37704_featurecounts.csv", row.names=1)
head(countDataTmp)
```

>Q1. Complete the code below to remove the troublesome first column from countData

```{r}
countData <- as.matrix(countDataTmp[,-1])
head(countData)
```

Check that my metadata and count data match 
```{r}
all( rownames(colData) == colnames(countData) )
```

>Q2. Complete the code below to filter countData to exclude genes (i.e. rows) where we have 0 read count across all samples (i.e. columns).

```{r}
#head(countData)

to.keep <- rowSums(countData) != 0
countData <- countData[to.keep,]

nrow(countData)
head(countData)
```

#DESeq analysis 

```{r}
#| message: false
library(DESeq2)

```

```{r}
head(colData)
```

Setup the object that DESeq needs for analysis with the lovely long-winded function: 

```{r}
dds <- DESeqDataSetFromMatrix(countData = countData, colData = colData, design = ~condition)
```
Run the analysis
```{r}
dds <- DESeq(dds)
res <- results(dds)

res
```

>Q3. Call the summary() function on your results to get a sense of how many genes are up or down-regulated at the default 0.1 p-value cutoff.

```{r}
summary(res)
```

#Volcano plot 

```{r}
plot(res$log2FoldChange, -log(res$padj))
```
>Q4. Improve this plot by completing the below code, which adds color and axis labels

Make some colors to highlight the subset of genes with significant high fold change values
```{r}
mycols <- rep("gray", nrow(res))
mycols[abs(res$log2FoldChange) > 2] <- "blue"
mycols[res$padj > 0.05]= "gray"
plot(res$log2FoldChange, -log(res$padj), col=mycols)
abline(v=c(-2,2), lty=2)
```

# Add gene annotation data

>Q5. Use the mapIDs() function multiple times to add SYMBOL, ENTREZID and GENENAME annotation to our results by completing the code below.

We will load up AnnotationDbi and our Human data package to add gene symbols and entrez IDs to our results object. 


```{r}
library("AnnotationDbi")
library("org.Hs.eg.db")

columns(org.Hs.eg.db)

res$symbol = mapIds(org.Hs.eg.db,
                    keys=rownames(res), 
                    keytype="ENSEMBL",
                    column="SYMBOL")
                  

res$entrez = mapIds(org.Hs.eg.db,
                    keys=rownames(res),
                    keytype="ENSEMBL",
                    column="ENTREZID",)
                    

res$name = mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype="ENSEMBL",
                    column="GENENAME",)
                  

head(res, 10)
```

>Q6. Finally for this section let's reorder these results by adjusted p-value and save them to a CSV file in your current project directory.

```{r}
res = res[order(res$pvalue),]
write.csv(res, file ="deseq_results.csv")
```



# Genset enrichment analysis (pathway analysis)

```{r}
library(pathview)

```

```{r}
library(gage)
library(gageData)

data(kegg.sets.hs)
data(sigmet.idx.hs)

# Focus on signaling and metabolic pathways only
kegg.sets.hs = kegg.sets.hs[sigmet.idx.hs]

# Examine the first 3 pathways
head(kegg.sets.hs, 3)
```
```{r}
foldchanges = res$log2FoldChange
names(foldchanges) = res$entrez
head(foldchanges)
```

```{r}
# Get the results
keggres = gage(foldchanges, gsets=kegg.sets.hs)
```

```{r}
attributes(keggres)
```
```{r}
attributes(keggres)
```
```{r}
# Look at the first few down (less) pathways
head(keggres$less)
```

```{r}
pathview(gene.data=foldchanges, pathway.id="hsa04110")
```

```{r}
# A different PDF based output of the same data
pathview(gene.data=foldchanges, pathway.id="hsa04110", kegg.native=FALSE)
```

![Figure 1](hsa00140.pathview.png)
![Figure 2](hsa04110.pathview.png)
![Figure 3](hsa04142.pathview.png)
![Figure 4](hsa04330.pathview.png)
![Figure 5](hsa04630.pathview.png)
![Figure 6](hsa04640.pathview.png)




>Q7. Can you do the same procedure as above to plot the pathview figures for the top 5 down-reguled pathways?

```{r}
## Focus on top 5 upregulated pathways here for demo purposes only
keggrespathways <- rownames(keggres$greater)[1:5]

# Extract the 8 character long IDs part of each string
keggresids = substr(keggrespathways, start=1, stop=8)
keggresids
```

```{r}
pathview(gene.data=foldchanges, pathway.id=keggresids, species="hsa")
```





## Gene Ontology (GO)

```{r}
data(go.sets.hs)
data(go.subs.hs)

# Focus on Biological Process subset of GO 
gobpsets = go.sets.hs[go.subs.hs$BP]

gobpress = gage(foldchanges, gsets=gobpsets, same.dir=TRUE)
head(keggres$less)
```


kallisto quant -i ___ -o SRR2156849_quant SRR2156849_1.fastq SRR2156849_2.fastq

ssh -i "khutzler_bimm143.pem" ubuntu@ec2-35-92-127-247.us-west-2.compute.amazonaws.com




